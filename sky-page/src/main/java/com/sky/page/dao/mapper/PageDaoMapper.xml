<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.page.dao.PageDao">

    <sql id="fieldName" >coding,name,field_en,table_en,is_show_list</sql>
    <sql id="findName" > coding,name,field_en,query_type</sql>
    <sql id="editName" > coding,name,field_en,input_type,selectbox_coding</sql>
    <sql id="inputName" > coding,input_type,name,table_en,key_field_en,value_field_en</sql>
    <sql id="tableName" >s_field</sql>

    <!--映射实体类:列表显示字段-->
    <resultMap id="ListFieldClassesResultMap" type="com.sky.admin.po.ListField">
        <id property="coding" column="coding"/>
        <result property="name" column="name"/>
        <result property="tableEn" column="table_en"/>
        <result property="fieldEn" column="field_en"/>
        <result property="isShowList" column="is_show_list"/>
    </resultMap>
    <!--映射实体类:列表查询字段-->
    <resultMap id="ListFindClassesResultMap" type="com.sky.admin.po.ListFind">
        <id property="coding" column="coding"/>
        <result property="name" column="name"/>
        <result property="fieldEn" column="field_en"/>
        <result property="queryType" column="query_type"/>
        <!--<result property="sorting_query" column="sorting_query"/>-->
    </resultMap>

    <!--查询列表字段-->
    <select id="getListFields" parameterType="java.lang.String" resultMap="ListFieldClassesResultMap">
        SELECT <include refid="fieldName" /> FROM <include refid="tableName" /> WHERE is_show_list=true AND configuration_page_coding=#{configuration_page_coding} ORDER BY sorting_list
    </select>
    <!--查询列表查询字段-->
    <select id="getListFinds" parameterType="java.lang.String" resultMap="ListFindClassesResultMap">
        SELECT <include refid="findName" /> FROM <include refid="tableName" /> WHERE is_query=true AND configuration_page_coding=#{configuration_page_coding} ORDER BY sorting_query
    </select>
    <!--映射实体类:编辑字段-->
    <resultMap id="EditFieldClassesResultMap" type="com.sky.admin.po.EditField">
        <id property="coding" column="coding"/>
        <result property="name" column="name"/>
        <result property="fieldEn" column="field_en"/>
        <result property="inputType" column="input_type"/>
        <association property="selectBox" column="selectbox_coding" select="com.sky.page.dao.SelectBoxDao.getSelectBox"/>
    </resultMap>
    <!--查询编辑字段-->
    <select id="getEditFields" parameterType="java.lang.String" resultMap="EditFieldClassesResultMap">
        SELECT <include refid="editName" /> FROM <include refid="tableName" /> WHERE is_edit=true AND configuration_page_coding=#{configuration_page_coding} ORDER BY sorting_edit
    </select>
    <!--查询列表数据-->
    <select id="getListDatas" resultType="java.util.Map">
        SELECT <foreach collection="listFields" index="index" item="item" separator="," >${item.fieldEn}</foreach> FROM ${tableEn}
        <where>
            <if test="listFinds!=null">
                <foreach collection="listFinds" index="index" item="item" separator="AND " >
                    <choose>
                        <when test="item.getQueryType().equals('is_null')"><!--查询null-->
                            ${item.fieldEn} is NULL
                        </when>
                        <when test="item.getQueryType().equals('等于')"><!--完全相同-->
                            ${item.fieldEn}=#{item.value}
                        </when>
                        <when test="item.getQueryType().equals('like')"><!--模糊查询 like-->
                            ${item.fieldEn} LIKE concat(concat('%',#{item.value}),'%')
                        </when>
                    </choose>
                </foreach>
            </if>
        </where>
    </select>
    <!--查询编辑数据-->
    <select id="getEidtData" resultType="java.util.Map">
        SELECT <foreach collection="editFields" index="index" item="item" separator="," >${item.fieldEn}</foreach> FROM ${tableEn}
        <where>
            <choose>
                <when test="idMap!=null and !idMap.isEmpty()">
                    <foreach collection="idMap" index="index" item="item" separator="AND " > ${index}=#{item} </foreach>
                </when>
                <otherwise> 1=2 </otherwise>
            </choose>
        </where>
    </select>
    <!--增加-->
    <insert id="doAdd">
        INSERT INTO ${tableEn}
        <trim prefix="(" suffix=")" >
            <foreach collection="editFields" index="index" item="item" separator="," >${item.fieldEn}</foreach>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="editFields" index="index" item="item" separator="," >
                <choose>
                    <when test="item.value != null and !item.value.equals('')">#{item.value}</when>
                    <otherwise>null</otherwise>
                </choose>
            </foreach>
        </trim>
    </insert>
    <!--更新-->
    <update id="doUpdate">
        UPDATE ${tableEn}
        <trim prefix="SET" suffixOverrides=",">
            <foreach collection="editFields" index="index" item="item" separator="," >
                <choose>
                    <when test="item.value != null and !item.value.equals('')">${item.fieldEn}=#{item.value}</when>
                    <otherwise>${item.fieldEn}=null</otherwise>
                </choose>
            </foreach>
        </trim>
        WHERE
        <foreach collection="findMap" index="index" item="item" separator=" AND " >
            <choose>
                <when test="item != null and !item.equals('')"> ${index}=#{item} </when>
                <otherwise> 1=2 </otherwise>
            </choose>
        </foreach>
    </update>
    <!--删除-->
    <delete id="doDelete">
        DELETE FROM ${tableEn} WHERE
        <foreach collection="findMap" index="index" item="item" separator=" AND " >
            <choose>
                <when test="item != null and !item.equals('')"> ${index}=#{item} </when>
                <otherwise> 1=2 </otherwise>
            </choose>
        </foreach>
    </delete>

 </mapper>